name: Push-to-EC2

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# jobs:
#   deploy:
#     name: Deploy to EC2 on main branch push
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout the files
#         uses: actions/checkout@v2

#       - name: Deploy to EC2
#         uses: easingthemes/ssh-deploy@main
#         env:
#           SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#           REMOTE_HOST: ${{ secrets.EC2_HOST }}
#           REMOTE_USER: ${{ secrets.EC2_USERNAME }}
#           TARGET: ${{ secrets.TARGET_DIR }}
jobs:
  deploy:
    name: Deploy to EC2 on main branch push
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600  ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      run: |
        rsync -avz --delete --exclude-from=".rsyncignore" -e "ssh -i ~/.ssh/id_rsa" ./ ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_PUBLIC_IP }}:${{ secrets.TARGET_DIR }}
        ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_PUBLIC_IP }} 'cd ${{ secrets.TARGET_DIR }}'

    - name: Clear SSH key
      run: rm ~/.ssh/id_rsa